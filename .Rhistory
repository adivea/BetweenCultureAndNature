library(leaflet)
library(tidyverse)
library(htmltools)
library(googlesheets4)
l_cp <- leaflet() %>%   # assign the base location to an object
setView(12.56553, 55.675946, zoom = 11)
#l_cp %>% addTiles()
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_cp <- l_cp %>% addProviderTiles(provider, group = provider)
}
# Create the map
MapCPH <- l_cp %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}")%>%
addControl("", position = "topright")
MapCPH
# test adding points
MapCPH %>% addAwesomeMarkers(lng = c(12.34, 12.23, 12.11),
lat = c(55.82, 55.63, 55.49),
popup = c("Mary", "Magnus", "Monty"))
# Load data from Googlesheet (deauthorize your connection if read_sheet gives you trouble)
baths <- read_sheet("https://docs.google.com/spreadsheets/d/15i17dqdsRYv6tdboZIlxTmhdcaN-JtgySMXIXwb5WfE/edit#gid=0",
col_types = "ccnnncnnnc")
baths$Quality <- factor(baths$Quality)
glimpse(factor(baths$Quality))
factpal <- colorNumeric(c("navy", "red", "grey"), 1:3)
# Read the bath coordinates and names into map
Bathsmap <- MapCPH %>% addCircleMarkers(lng=baths$Longitude,
lat=baths$Latitude,
color = factpal(baths$Quality),
popup = paste0("Name: ", baths$BathhouseName,
"<br> Notes: ", baths$Notes))
glimpse(factor(baths$Quality))
factpal(c(1,1,2))
MapCPH %>% addCircleMarkers(lng=baths$Longitude,
lat=baths$Latitude,
color = factpal(baths$Quality),
popup = paste0("Name: ", baths$BathhouseName,
"<br> Notes: ", baths$Notes))
factpal(c(1,1,2))
factpal(baths$Quality)
baths$Quality
# Load data from Googlesheet (deauthorize your connection if read_sheet gives you trouble)
baths <- read_sheet("https://docs.google.com/spreadsheets/d/15i17dqdsRYv6tdboZIlxTmhdcaN-JtgySMXIXwb5WfE/edit#gid=0",
col_types = "ccnnncnnnc")
glimpse(factor(baths$Quality))
factpal <- colorNumeric(c("navy", "red", "grey"), 1:3)
factpal(c(1,1,2))
# Read the bath coordinates and names into map
Bathsmap <- MapCPH %>% addCircleMarkers(lng=baths$Longitude,
lat=baths$Latitude,
color = factpal(baths$Quality),
popup = paste0("Name: ", baths$BathhouseName,
"<br> Notes: ", baths$Notes))
Bathsmap
Bathsmap
# Read the bath coordinates and names into map
Bathsmap <- MapCPH %>% addCircleMarkers(lng=baths$Longitude,
lat=baths$Latitude,
radius=baths$Quality*2,
color = factpal(baths$Quality),
popup = paste0("Name: ", baths$BathhouseName,
"<br> Notes: ", baths$Notes))
Bathsmap
# Read the bath coordinates and names into map
Bathsmap <- MapCPH %>% addCircleMarkers(lng=baths$Longitude,
lat=baths$Latitude,
radius=baths$Quality*3,
color = factpal(baths$Quality),
popup = paste0("Name: ", baths$BathhouseName,
"<br> Notes: ", baths$Notes))
Bathsmap
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
require(tidyverse,sf)
library(tidyverse)
library(sf)
library(spatstat)
library(spatialkernel)
suburbs <- st_read("data/bydel.shp")
plot(suburbs)
plot(suburbs$geometry)
unique(suburbs$navn)
#Clean up suburb names
suburbs %>%
select(navn) %>%
mutate(Name=gsub("\xf8","oe",navn))
#Clean up suburb names
suburbs %>%
select(navn) %>%
mutate(Name=gsub("\\xf8","oe",navn))
#Clean up suburb names
suburbs %>%
select(navn) %>%
mutate(Name=gsub("<xf8>","oe",navn))
#Clean up suburb names
suburbs %>%
select(navn) %>%
mutate(Name=gsub("<f8>","oe",navn))
#Clean up suburb names
suburbs %>%
select(navn) %>%
mutate(Name=gsub("<f8>|<d8>","oe",navn))
suburbs$navn
#Clean up suburb names
suburbs %>%
select(navn) %>%
mutate(Name=gsub("<xf8>|<xd8>","oe",navn))
head(suburbs)
tail(suburbs)
#Clean up suburb names
suburbs %>%
select(navn) %>%
mutate(Name=gsub("f8|d8","oe",navn))
wc <- read_sheet("https://docs.google.com/spreadsheets/d/1iFvycp6M6bF8GBkGjA2Yde2yCIhiy5_slAkGF-RUF7w/edit#gid=0",
col_types = "cnnnnnnnn")
wc <- read_sheet("https://docs.google.com/spreadsheets/d/1iFvycp6M6bF8GBkGjA2Yde2yCIhiy5_slAkGF-RUF7w/edit#gid=0",
col_types = "cnnnnnnnn")
lookup <- read_sheet("https://docs.google.com/spreadsheets/d/1iFvycp6M6bF8GBkGjA2Yde2yCIhiy5_slAkGF-RUF7w/edit#gid=285039881")
wc
tail(suburbs)
wc_spatial <- wc %>%
full_join(data, by =c("bydel_nr","suburb_id"))
wc
tibble(wc)
wc_spatial <- suburbs %>%
full_join(wc, by =c("bydel_nr","suburb_id"))
suburbs$
#Clean up suburb names
suburbs$navn
suburbs$id
wc_spatial <- suburbs %>%
full_join(wc, by =c("id","suburb_id"))
wc %>%
group_by(suburb_id, year)
wc %>%
group_by(year, suburb_id) %>%
summarize(flats = sum(flats))
wc
wc %>%
group_by(year, suburb_id) %>%
summarize(flats = sum(flats))
wc %>%
group_by(year, suburb_id) %>%
summarize(flats = sum(flats),
baths = sum(baths))
wc %>%
group_by(year, suburb_id) %>%
summarize(flats = sum(flats),
bathsum = sum(baths))
wc
wc %>%
group_by(year, suburb_id) %>%
summarize(flats = sum(flats),
bath = sum(bath))
wc
wc %>%
group_by(year, suburb_id) %>%
summarize(flats = sum(flats),
bath = sum(bath),
wc_access=sum(wc_access),
warmH20=sum(hot_water),
communal_wc = sum(wc_communal_ct),
communal_bath = sum(bath_communal_ct))
wcdata <- wc %>%
group_by(year, suburb_id) %>%
summarize(flats = sum(flats),
bath = sum(bath),
wc_access=sum(wc_access),
warmH20=sum(hot_water),
communal_wc = sum(wc_communal_ct),
communal_bath = sum(bath_communal_ct))
wc_spatial <- suburbs %>%
full_join(wcdata, by =c("id","suburb_id"))
wcdata
wc_spatial <- suburbs %>%
merge(wcdata, by=c("id","suburb_id"))
wc_spatial <- suburbs %>%
merge(wcdata, by.x= "id",by.y ="suburb_id")
wc_spatial
names(wc_spatial)
names(wc_spatial)
library(tmaps)
library(tmap)
Bathsmap %>% addPolygons(suburbs)
Bathsmap %>% addPolygons(data=suburbs)
tm_shape(wc_spatial) +
tm_polygons("flats",
breaks = "pretty",
palette = "green")
wc1950 <- wc_spatial %>%
filter(year==1950)
tm_shape(wc1950) +
tm_polygons("flats",
breaks = "pretty",
palette = "green")
tm_shape(wc1950) +
tm_polygons("flats",
style = "pretty",
palette = "green")
tm_shape(wc1950) +
tm_polygons("flats",
style = "pretty",
palette = ""-RdYlGn"")
tm_shape(wc1950) +
tm_polygons("flats",
style = "pretty",
palette = "-RdYlGn")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 2) +
tm_polygons("flats",
style = "pretty",
palette = "-RdYlGn")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty",
palette = "-RdYlGn")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty",
palette = "-YlGn")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty",
palette = "-GnYl")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty",
palette = "GnYl")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty",
palette = "Viridis")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty",
palette = "Reds 3")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty",
palette = "r3")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "quantile")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "jenks")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty")
tm_scale_bar(position = c("LEFT", "BOTTOM"),
breaks = c(0, 2, 4),
text.size = 1) +
tm_compass(position = c("RIGHT", "TOP"),
type = "rose",
size = 2) +
tm_credits(position = c("LEFT", "BOTTOM"),
text = "Adela Sobotkova, 2021") +
tm_layout(main.title = "Copenhagen Flats",
#bg.color = "lightblue",
legend.outside = TRUE)
tmap_mode(mode = "view" )
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty")+
tm_scale_bar(position = c("LEFT", "BOTTOM"),
breaks = c(0, 2, 4),
text.size = 1) +
tm_compass(position = c("RIGHT", "TOP"),
type = "rose",
size = 2) +
tm_credits(position = c("LEFT", "BOTTOM"),
text = "Adela Sobotkova, 2021") +
tm_layout(main.title = "Copenhagen Flats",
#bg.color = "lightblue",
legend.outside = TRUE)
tm_shape(wc_data) +
tm_facets(by = "year")+
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty")+
tm_scale_bar(position = c("LEFT", "BOTTOM"),
breaks = c(0, 2, 4),
text.size = 1) +
tm_compass(position = c("RIGHT", "TOP"),
type = "rose",
size = 2) +
tm_credits(position = c("LEFT", "BOTTOM"),
text = "Adela Sobotkova, 2021") +
tm_layout(main.title = "Copenhagen Flats",
#bg.color = "lightblue",
legend.outside = TRUE)
tm_shape(wc_spatial) +
tm_facets(by = "year")+
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty")+
tm_scale_bar(position = c("LEFT", "BOTTOM"),
breaks = c(0, 2, 4),
text.size = 1) +
tm_compass(position = c("RIGHT", "TOP"),
type = "rose",
size = 2) +
tm_credits(position = c("LEFT", "BOTTOM"),
text = "Adela Sobotkova, 2021") +
tm_layout(main.title = "Copenhagen Flats",
#bg.color = "lightblue",
legend.outside = TRUE)
flatratio <- wc_spatial %>%
mutate(flat_per_km = flats/areal_m2)
flatratio
wc_spatial <- wc_spatial %>%
mutate(flat_per_km = flats/areal_m2)
