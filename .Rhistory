tm_shape(wc_spatial) +
tm_facets(by = "year") +
tm_polygons("flat_per_km",
n=5,
style = "quantile") #+
# tm_layout(main.title = "Copenhagen Flats per sq km",
#           legend.outside = TRUE)
library(tmap)
tmap_options(limits = c(facets.view = 5)) # we want to view 5 years
tmap_mode(mode = "view" )
tm_shape(wc_spatial) +
tm_facets(by = "year")+
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flats",
style = "pretty")+
tm_layout(main.title = "Copenhagen Flats",
legend.outside = TRUE)
library(tmap)
tmap_options(limits = c(facets.view = 5)) # we want to view 5 years
tmap_mode(mode = "view" )
tm_shape(wc_spatial) +
tm_facets(by = "year")+
tm_polygons("flats",
style = "pretty")+
tm_layout(main.title = "Copenhagen Flats",
legend.outside = TRUE)
library(osmdata)
# Create a bounding box
bb  <- suburbs %>% st_transform(4326) %>% st_bbox()
plot(bb)
q <- opq(bbox = bb,timeout = 180)
qa  <- add_osm_feature(q, key = 'amenity',value = 'public_bath')
qb     <- add_osm_feature(q, key = 'amenity',value = 'drinking_water')
qc     <- add_osm_feature(q, key = 'amenity',value = 'shower')
qd     <- add_osm_feature(q, key = 'amenity',value = 'toilets')
qe     <- add_osm_feature(q, key = 'amenity',value = 'water_point')
public_bath <- c(osmdata_sf(qa),
osmdata_sf(qc),
osmdata_sf(qd))
bath_uniq <- unique_osmdata(public_bath)
rpoint <- bath_uniq$osm_points %>%
filter(!is.na(amenity)) %>%
st_transform(32632) %>% dplyr::select(name)
rpoint <- bath_uniq$osm_points %>%
filter(!is.na(amenity)) %>%
st_transform(32632) %>% dplyr::select(name)
bath_uniq <- unique_osmdata(public_bath)
rpoint <- bath_uniq$osm_points %>%
filter(!is.na(amenity)) %>%
st_transform(32632) %>% dplyr::select(name)
rpoint <- bath_uniq$osm_points %>%
filter(!is.na(amenity)) %>%
st_transform(32632) %>% select(name)
bath_uniq <- unique_osmdata(public_bath)
bath_uniq$osm_points
bath_uniq$osm_points
bath_uniq$osm_points %>%
filter(!is.na(amenity)) %>%
st_transform(32632) %>%
select(name)
bath_uniq$osm_points %>%
filter(!is.na(amenity))
library(osmdata)
# Create a bounding box
bb  <- suburbs %>% st_transform(4326) %>% st_bbox()
plot(bb)
q <- opq(bbox = bb,timeout = 180)
qa  <- add_osm_feature(q, key = 'amenity',value = 'public_bath')
qb     <- add_osm_feature(q, key = 'amenity',value = 'drinking_water')
qc     <- add_osm_feature(q, key = 'amenity',value = 'shower')
qd     <- add_osm_feature(q, key = 'amenity',value = 'toilets')
qe     <- add_osm_feature(q, key = 'amenity',value = 'water_point')
public_bath <- c(osmdata_sf(qa),
osmdata_sf(qc),
osmdata_sf(qd))
bath_uniq <- unique_osmdata(public_bath)
bath_uniq$osm_points
bath_uniq$osm_points
bath_uniq$osm_points %>% filter(is.na(amenity))
bath_uniq$osm_points %>% unlist() %>% filter(is.na(amenity))
bath_uniq$osm_points %>% unlist()
rpoint <- bath_uniq$osm_points %>%
#filter(!is.na(amenity)) %>%
st_transform(32632) %>%
select(name)
rpoint <- bath_uniq$osm_points %>%
#filter(!is.na(amenity)) %>%
st_transform(32632) %>%
dplyr::select(name)
rpoly  <- bath_uniq$osm_polygons %>%
st_transform(32632) %>%
dplyr::select(name)  %>% st_centroid()
baths_osm <- rbind(rpoly,rpoint)
baths_osm <- st_intersection(baths_osm, st_transform(suburbs, 32632) %>% st_geometry() %>% st_union())
# transform also historical baths
baths_cph <- wc_spatial%>%
st_centroid() %>%
st_transform(32632) %>%
mutate(radius = sqrt(bath_per_km)) %>%
arrange(desc(bath_per_km))
library(tidyverse)
rpoint <- bath_uniq$osm_points %>%
filter(!is.na(amenity)) %>%
st_transform(32632) %>%
dplyr::select(name)
rpoly  <- bath_uniq$osm_polygons %>%
st_transform(32632) %>%
dplyr::select(name)  %>% st_centroid()
baths_osm <- rbind(rpoly,rpoint)
baths_osm <- st_intersection(baths_osm, st_transform(suburbs, 32632) %>% st_geometry() %>% st_union())
# transform also historical baths
baths_cph <- wc_spatial%>%
st_centroid() %>%
st_transform(32632) %>%
mutate(radius = sqrt(bath_per_km)) %>%
arrange(desc(bath_per_km))
unlink('CPHWaterResources_cache', recursive = TRUE)
library(tmap)
tmap_options(limits = c(facets.view = 6))
tmap_mode(mode = "view" )
tm_shape(wc_spatial) +
tm_facets(by = "year")+
# tm_borders(col = "black",
#            lwd = 1) +
tm_polygons("pct_bath",
style = "pretty",
title = "% of flats with \n access to bath") #+
# tm_layout(main.title = "Percentage of flats with access to a bath", legend.outside = TRUE)
unlink('CPHWaterResources_cache', recursive = TRUE)
unlink('CPHWaterResources_cache', recursive = TRUE)
# Run the Kcross function
kcross <- Kcross(b_ppp, i="H",j="O",
# r=rc,
correction='none')
unlink('CPHWaterResources_cache', recursive = TRUE)
baths_osm
suburbs
hist_baths
#############################################################
#  Part II - Compare OSM data with present dataset
#############################################################
# Convert data points into a grid
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
#############################################################
#  Part II - Compare OSM data with present dataset
#############################################################
# Convert data points into a grid
library(sf)
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
#############################################################
#  Part II - Compare OSM data with present dataset
#############################################################
# Convert data points into a grid
library(raster)
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
#############################################################
#  Part II - Compare OSM data with present dataset
#############################################################
# Convert data points into a grid
library(sp)
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
#############################################################
#  Part II - Compare OSM data with present dataset
#############################################################
# Convert data points into a grid
library(rgdal)
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
library(sf)
library(tidyverse)
library(spatstat)
library(spatialkernel)
library(googlesheets4)
library(leaflet)
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
#############################################################
#  Part II - Compare OSM data with present dataset
#############################################################
# Convert data points into a grid
library(leaflet)
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
pt_in_grid <- function(feat, adm, cellsize = 1000){
grid <- st_make_grid(x = adm, cellsize = cellsize, what = "polygons")
. <- st_intersects(grid, adm)
grid <- grid[sapply(X = ., FUN = length)>0]
. <- st_intersects(grid, feat)
grid <- st_sf(n = sapply(X = ., FUN = length), grid)
return(grid)
}
gr_osm <- pt_in_grid(baths_osm,st_transform(suburbs,32632),500)
gr_his <- pt_in_grid(hist_baths,st_transform(suburbs,32632),500)
grid <- gr_osm %>% rename(osm=n) %>%
mutate(history = gr_his$n) %>%
filter(history==0,osm==0) %>%
mutate(missing =  pmax(history - osm,0))
bks = c(0,5,10,20,40,80,160,300)
cols <- carto.pal("green.pal", 7)
color.scale <- colorBin(cols, domain = range(bks), bins=bks)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = cols,
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
bks = c(0,5,10,20,40,80,160,300)
cols <- carto.pal("green.pal", 7)
color.scale <- colorBin(cols, domain = range(bks), bins=bks)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = cols,
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
bks = c(0,5,10,20,40,80,160,300, 600)
cols <- carto.pal("green.pal", 8)
library(RColorBrewer)
cols <- carto.pal("green.pal", 8)
pal <- colorNumeric(
palette = "Greens",
domain = bks)
color.scale <- colorBin(pal, domain = range(bks), bins=bks)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = cols,
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = pal,
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
pal
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = pal[1:8],
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
grid$missing
unique(grid$missing)
gr_osm %>% rename(osm=n) %>%
mutate(history = gr_his$n) %>%
filter(history==0,osm==0)
gr_osm
plot(gr_osm)
plot(gr_his)
plot(gr_osm)
plot(gr_his)
grid <- gr_osm %>% rename(osm=n) %>%
mutate(history = gr_his$n) %>%
filter(history==0,osm==0) %>%
mutate(missing =  pmax(history - osm,0))
plot(grid)
plot(grid$missing)
plot(grid, "missing")
plot(grid)
plot(gr_osm)
plot(gr_his)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(missing),
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(bks),
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
plot(grid)
pal <- colorNumeric(
palette = "Greens",
domain = bks)
pal <- colorNumeric(
palette = "Greens",
domain = grid$missing)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(missing),
labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM"
)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(#colors = ~pal(missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(grid$missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(grid$missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
bks = c(0,5,10,20,40,80,160,300, 600)
color.scale <- colorBin(pal, domain = range(bks), bins=bks)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(grid$missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(grid$missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
color.scale(grid$missing)
pal(grid$missing)
pal(grid$missing)
pal(grid$missing)
pal(grid$missing)
color.scale(grid$missing)
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(grid$missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~color.scale(grid$missing),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(grid$missing),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(bks),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
leaflet(grid  %>%
st_transform(4326) %>%
filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(bks),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(bks),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
grid$missing>1
which(grid$missing>1)
which(grid$missing==0)
which(is.na(grid$missing))
which(grid$missing>0)
which(grid$missing==0)
leaflet(gr_osm%>%
st_transform(4326) %>%
# filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~color.scale(missing),
stroke = FALSE,
fillOpacity = 0.7)
)
leaflet(gr_osm%>%
st_transform(4326) %>%
# filter(!is.na(missing))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal,
stroke = FALSE,
fillOpacity = 0.7))
leaflet(gr_osm%>%
st_transform(4326) %>%
filter(!is.na(osm))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(gr_osm$osm),
stroke = FALSE,
fillOpacity = 0.7))
leaflet(gr_osm%>%
st_transform(4326) %>%
filter(!is.na(osm))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(gr_osm$osm),
stroke = FALSE,
fillOpacity = 0.7)
leaflet(gr_osm%>%
st_transform(4326) %>%
filter(!is.na(n))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(gr_osm$n),
stroke = FALSE,
fillOpacity = 0.7)
plot(gr_osm)
plot(gr_his)
plot(gr_osm)
bks = c(0,1,2,3,4,5,6,7)
pal <- colorNumeric(
palette = "Greens",
domain = gr_osm$n)
color.scale <- colorBin(pal, domain = range(bks), bins=bks)
leaflet(gr_osm%>%
st_transform(4326) %>%
filter(!is.na(n))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(gr_osm$n),
stroke = FALSE,
fillOpacity = 0.7)
leaflet(gr_osm%>%
st_transform(4326) %>%
filter(!is.na(n))) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(fillColor = ~pal(gr_osm$n),
stroke = FALSE,
fillOpacity = 0.7) %>%
addLegend(colors = ~pal(bks),
#labels = round(bks[1:(length(bks)-1)]*10)/10,
title = "# net difference between</br> bathrooms
in </br>historical records and OSM")
